#####
##### STAGE
##### podverse-workers
#####

# NOTE:
# Use lowercase true to enable properties.
# Leave value blank or comment out to disable properties.

#####
##### App / General
#####

USER_AGENT=Podverse/Workers

#####
##### AWS
#####
### AWS is used for our RSS parsing queue (SQS) and image uploads (S3)

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_QUEUE_URLS_FEEDS_TO_PARSE_LIVE_QUEUE_URL=
AWS_QUEUE_URLS_FEEDS_TO_PARSE_PRIORITY_QUEUE_URL=
AWS_QUEUE_URLS_FEEDS_TO_PARSE_QUEUE_URL=
AWS_QUEUE_URLS_SELF_MANAGED_FEEDS_TO_PARSE_QUEUE_URL=
AWS_IMAGE_S3_BUCKET_NAME=
AWS_IMAGE_CLOUDFRONT_ORIGIN=

# Size in pixels of square images we upload to S3 (aka podcast.shrunkImageUrl)
IMAGE_SHRINKER_IMAGE_SIZE=800

#####
##### Datebase / ORM
#####

DB_TYPE=postgres
DB_HOST=podverse_db
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=mysecretpw
DB_DATABASE=postgres
DB_SSL_CONNECTION=

#####
##### Google / FCM
#####
### We use FCM to send push notifications.

GOOGLE_AUTH_TOKEN=

#####
##### Manticore
##### 
### Manticore is the self-hosted search engine we use to query
### for podcasts, episodes, and mediaRefs by title.
### We could really use help improving our Manticore setup tbh...

MANTICORE_DOMAIN=podverse_manticore
MANTICORE_PORT=9308
MANTICORE_PROTOCOL=http

#####
##### Matomo
#####
### Matomo is our self-hosted analytics tracking service.
### Our Matomo unique pageview tracking data is used as the basis
### of our "sort by popularity" algorithm. (very flawed algo)
### We use Cloudron to deploy and manage our Matomo service.

MATOMO_BASE_URL=
MATOMO_SITE_ID=
MATOMO_AUTH_TOKEN=

#####
##### Podcast Index
#####
### Our RSS parser setup relies on the Podcast Index API for the following:
### 1) RSS feed has updated notifications (send that feed to our queue for re-parsing)
### 2) New podcast discovered (add that feed to our database, then parse feed)
### 3) RSS feed removed (set that podcast to hidden in our database)
### 4) Receive info about podcasts that have value-for-value data
###    exclusively in Podcast Index (aka Podcaster Wallet).
### 5) ??? anything else?

PODCAST_INDEX_AUTH_KEY=
PODCAST_INDEX_SECRET_KEY=
PODCAST_INDEX_BASE_URL=https://api.podcastindex.org/api/1.0
PODCAST_INDEX_RECENTLY_UPDATED_SINCE_TIME=3600000 # in ms
PODCAST_INDEX_NEW_FEEDS_SINCE_TIME=43200000 # in ms

#####
##### Podping
##### 
### We currently only use Podping to let users broadcast "going live"
### and "ending livestream" notifications.

PODPING_HIVE_ACCOUNT=
PODPING_HIVE_POSTING_KEY=

#####
##### Website related
#####
### NOTE: these are for the *public facing* IP addresses,
### not the internal Docker service network or private IP addresses.

WEBSITE_PROTOCOL=http
WEBSITE_DOMAIN=localhost:3000

#####
##### Clipbot (special user id)
#####
### This id corresponds with a user ID in the database
### that generates mediaRefs (clips aka soundbites, and chapters)
### from RSS <podcast:soundbite> tags.
### The id below corresponds with the id of the "Podverse Clipbot" user
### in the old-sample-database.sql file. In prod, you'll need a different user id.
# SUPER_USER_ID=kOJGv2oGF
### in the qa-database.sql file. In prod, you'll need a different user id.
# TODO: We should try to get rid of SUPER_USER_ID entirely!
# More Info: https://github.com/podverse/podverse-api/issues/569
SUPER_USER_ID=
